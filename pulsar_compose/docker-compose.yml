version: '2'
services:
    # Zookeeper for Pulsar
    zookeeper-cluster-0-0:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        command: bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && echo "server.0=zookeeper-cluster-0-0:2888:3888" >> /pulsar/conf/zookeeper.conf; echo "server.1=zookeeper-cluster-0-1:2888:3888" >> /pulsar/conf/zookeeper.conf; echo "server.2=zookeeper-cluster-0-2:2888:3888" >> /pulsar/conf/zookeeper.conf && if [ ! -f /pulsar/data/zookeeper/myid ]; then mkdir -p /pulsar/data/zookeeper && echo 0 > /pulsar/data/zookeeper/myid; fi && exec bin/pulsar zookeeper"
        environment:
            - PULSAR_MEM="-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m"
        healthcheck:
            test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
            interval: 10s
            timeout: 5s
            retries: 5
    # Zookeeper for Pulsar
    zookeeper-cluster-0-1:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        command: bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && echo "server.0=zookeeper-cluster-0-0:2888:3888" >> /pulsar/conf/zookeeper.conf; echo "server.1=zookeeper-cluster-0-1:2888:3888" >> /pulsar/conf/zookeeper.conf; echo "server.2=zookeeper-cluster-0-2:2888:3888" >> /pulsar/conf/zookeeper.conf && if [ ! -f /pulsar/data/zookeeper/myid ]; then mkdir -p /pulsar/data/zookeeper && echo 1 > /pulsar/data/zookeeper/myid; fi && exec bin/pulsar zookeeper"
        environment:
            - PULSAR_MEM="-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m"
        healthcheck:
            test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
            interval: 10s
            timeout: 5s
            retries: 5
    # Zookeeper for Pulsar
    zookeeper-cluster-0-2:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        command: bash -c "bin/apply-config-from-env.py conf/zookeeper.conf && bin/apply-config-from-env.py conf/pulsar_env.sh && echo "server.0=zookeeper-cluster-0-0:2888:3888" >> /pulsar/conf/zookeeper.conf; echo "server.1=zookeeper-cluster-0-1:2888:3888" >> /pulsar/conf/zookeeper.conf; echo "server.2=zookeeper-cluster-0-2:2888:3888" >> /pulsar/conf/zookeeper.conf && if [ ! -f /pulsar/data/zookeeper/myid ]; then mkdir -p /pulsar/data/zookeeper && echo 2 > /pulsar/data/zookeeper/myid; fi && exec bin/pulsar zookeeper"
        environment:
            - PULSAR_MEM="-Xms256m -Xmx256m -XX:MaxDirectMemorySize=256m"
        healthcheck:
            test: ["CMD", "bin/pulsar-zookeeper-ruok.sh"]
            interval: 10s
            timeout: 5s
            retries: 5

    # BEGIN Pulsar cluster cluster-0 definition

    # Pulsar init job for cluster cluster-0
    pulsar-init-cluster-0:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        command: bash -c "bin/pulsar initialize-cluster-metadata --cluster cluster-0 --metadata-store zk:zookeeper-cluster-0-0:2181 --configuration-metadata-store zk:zookeeper-cluster-0-0:2181 --web-service-url http://broker-{cluster_name}:8080 --broker-service-url pulsar://broker-{custer_name}:6650"
        depends_on:
            zookeeper-cluster-0-0:
                condition: service_healthy
            zookeeper-cluster-0-1:
                condition: service_healthy
            zookeeper-cluster-0-2:
                condition: service_healthy

    # Pulsar broker for cluster cluster-0
    broker-cluster-0:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        environment:
            - clusterName=cluster-0
            - metadataStoreUrl=zk:zookeeper-cluster-0-0:2181,zk:zookeeper-cluster-0-1:2181,zk:zookeeper-cluster-0-2:2181
            - configurationMetadataStoreUrl=zk:zookeeper-cluster-0-0:2181,zk:zookeeper-cluster-0-1:2181,zk:zookeeper-cluster-0-2:2181
            - managedLedgerDefaultEnsembleSize=3
            - managedLedgerDefaultWriteQuorum=3
            - managedLedgerDefaultAckQuorum=3
            - advertisedAddress=broker
            - advertisedListeners=external:pulsar://127.0.0.1:6650
            - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
        command: bash -c "bin/apply-config-from-env.py conf/broker.conf && exec bin/pulsar broker"
        depends_on:
            zookeeper-cluster-0-0:
                condition: service_healthy
            zookeeper-cluster-0-1:
                condition: service_healthy
            zookeeper-cluster-0-2:
                condition: service_healthy
            bookie-cluster-0-0:
                condition: service_started
            bookie-cluster-0-1:
                condition: service_started
            bookie-cluster-0-2:
                condition: service_started
        deploy:
            mode: replicated
            replicas: 3
            endpoint_mode: dnsrr

    # Bookie for cluster cluster-0
    bookie-cluster-0-0:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        environment:
            - clusterName=cluster-0
            - metadataServiceUri=zk://zookeeper-cluster-0-0:2181;zookeeper-cluster-0-1:2181;zookeeper-cluster-0-2:2181/ledgers
            - advertisedAddress=bookie
            - useHostNameAsBookieID="true"
            - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
            - dbStorage_writeCacheMaxSizeMb=32
            - dbStorage_readAheadCacheMaxSizeMb=32
        depends_on:
            pulsar-init-cluster-0:
                condition: service_completed_successfully
            zookeeper-cluster-0-0:
                condition: service_healthy
            zookeeper-cluster-0-1:
                condition: service_healthy
            zookeeper-cluster-0-2:
                condition: service_healthy

        command: bash -c "set -e; bin/apply-config-from-env.py conf/bookkeeper.conf; bin/apply-config-from-env.py conf/pulsar_env.sh; if bin/bookkeeper shell whatisinstanceid; then echo bookkeeper_cluster_already_initialized; else echo init_new_bookkeeper_cluster_start; bin/bookkeeper shell initnewcluster; echo init_new_bookkeeper_cluster_end; fi; exec bin/pulsar bookie"
        volumes:
            - bookie-data-cluster-0-0:/pulsar/data
        healthcheck:
            test: ["CMD", "bin/bookkeeper", "shell", "bookiesanity"]
            interval: 10s
            timeout: 5s
            retries: 100
    # Bookie for cluster cluster-0
    bookie-cluster-0-1:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        environment:
            - clusterName=cluster-0
            - metadataServiceUri=zk://zookeeper-cluster-0-0:2181;zookeeper-cluster-0-1:2181;zookeeper-cluster-0-2:2181/ledgers
            - advertisedAddress=bookie
            - useHostNameAsBookieID="true"
            - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
            - dbStorage_writeCacheMaxSizeMb=32
            - dbStorage_readAheadCacheMaxSizeMb=32
        depends_on:
            pulsar-init-cluster-0:
                condition: service_completed_successfully
            zookeeper-cluster-0-0:
                condition: service_healthy
            zookeeper-cluster-0-1:
                condition: service_healthy
            zookeeper-cluster-0-2:
                condition: service_healthy
            bookie-cluster-0-0:
                condition: service_started
        command: bash -c "set -e; bin/apply-config-from-env.py conf/bookkeeper.conf; bin/apply-config-from-env.py conf/pulsar_env.sh; if bin/bookkeeper shell whatisinstanceid; then echo bookkeeper_cluster_already_initialized; else echo init_new_bookkeeper_cluster_start; bin/bookkeeper shell initnewcluster; echo init_new_bookkeeper_cluster_end; fi; exec bin/pulsar bookie"
        volumes:
            - bookie-data-cluster-0-1:/pulsar/data
        healthcheck:
            test: ["CMD", "bin/bookkeeper", "shell", "bookiesanity"]
            interval: 10s
            timeout: 5s
            retries: 100
    # Bookie for cluster cluster-0
    bookie-cluster-0-2:
        image: apachepulsar/pulsar:3.2.2
        user: pulsar
        restart: on-failure
        environment:
            - clusterName=cluster-0
            - metadataServiceUri=zk://zookeeper-cluster-0-0:2181;zookeeper-cluster-0-1:2181;zookeeper-cluster-0-2:2181/ledgers
            - advertisedAddress=bookie
            - useHostNameAsBookieID="true"
            - BOOKIE_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=256m
            - dbStorage_writeCacheMaxSizeMb=32
            - dbStorage_readAheadCacheMaxSizeMb=32
        depends_on:
            pulsar-init-cluster-0:
                condition: service_completed_successfully
            zookeeper-cluster-0-0:
                condition: service_healthy
            zookeeper-cluster-0-1:
                condition: service_healthy
            zookeeper-cluster-0-2:
                condition: service_healthy
            bookie-cluster-0-1:
                condition: service_started
        command: bash -c "set -e; bin/apply-config-from-env.py conf/bookkeeper.conf; bin/apply-config-from-env.py conf/pulsar_env.sh; if bin/bookkeeper shell whatisinstanceid; then echo bookkeeper_cluster_already_initialized; else echo init_new_bookkeeper_cluster_start; bin/bookkeeper shell initnewcluster; echo init_new_bookkeeper_cluster_end; fi; exec bin/pulsar bookie"
        volumes:
            - bookie-data-cluster-0-2:/pulsar/data
        healthcheck:
            test: ["CMD", "bin/bookkeeper", "shell", "bookiesanity"]
            interval: 10s
            timeout: 5s
            retries: 100
    # END Pulsar cluster cluster-0 definition

volumes:
    bookie-data-cluster-0-0:
    bookie-data-cluster-0-1:
    bookie-data-cluster-0-2:
